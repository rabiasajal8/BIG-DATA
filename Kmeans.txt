***************************************************************************
KMEANS
# K mean - case 1
# Code which output time, purity, distiniugable plot 
#conclusive line

#iMporting dataset
X, y = make_moons(n_samples=6298, noise=0.05)
#scaling the data
scaler = StandardScaler()
X = scaler.fit_transform(X)
#performaing the kmeans clustering
#using time at the start (note the starting time)
start_time = time.time()
kmeans = KMeans(n_clusters=2, random_state=0).fit(X)
end_time = time.time()
#using time at the end (note the ending time)
# Get predicted labels
y_pred = kmeans.labels_
#finding out how accurate the model is
accuracy = accuracy_score(y, y_pred)
#TASK 2 WAS TO CALCULATE THE PURITY SO:
cluster1 = np.where(y_pred == 0)[0]
cluster2 = np.where(y_pred == 1)[0]
purity = max(np.sum(y[cluster1] == 0) + np.sum(y[cluster2] == 1), np.sum(y[cluster1] == 1) + np.sum(y[cluster2] == 0)) / len(y)
#VISUALIZATION
plt.figure(figsize=(10, 5))
plt.scatter(X[:, 0], X[:, 1], c=y_pred)
plt.scatter(X[:, 0], X[:, 1], c='b')
plt.show()
# Print the results
print('Time taken:', end_time - start_time, 'seconds')
print('Purity:', purity)